plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services' // Firebase configuration
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin' // Flutter Gradle Plugin
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "1")
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0")

android {
    namespace = "com.iMarket.i_market"
    compileSdkVersion flutter.compileSdkVersion.toInteger() // Ensure compileSdkVersion is correctly fetched
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.iMarket.i_market"
        minSdkVersion 23 // Set minSdkVersion to 23 explicitly
        targetSdkVersion flutter.targetSdkVersion.toInteger() // Ensure targetSdkVersion is correctly fetched
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug // Update with your release signing config
        }
    }
}

flutter {
    source = "../.."
}
